{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"ho",
				"hooks"
			],
			[
				"handsha",
				"handshake"
			]
		]
	},
	"buffers":
	[
		{
			"file": "lib/index.js",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/tmp/subl stdin q0XVkK.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/tmp/subl stdin aZDu7s.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/beans/hooks.core/transactions.js",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/beans/hooks.core/transports.js",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/tmp/subl stdin Vmopb4.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/tmp/subl stdin 9esqoU.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/tmp/subl stdin Q3lbbv.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/tmp/subl stdin n5mDvh.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/tmp/subl stdin QSsYfI.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "examples/cluster-1/app1-1.js",
			"settings":
			{
				"buffer_size": 471,
				"line_ending": "Unix"
			}
		},
		{
			"file": "examples/cluster-1/app2-1.js",
			"settings":
			{
				"buffer_size": 885,
				"line_ending": "Unix"
			}
		},
		{
			"file": "examples/cluster-1/app2-2.js",
			"settings":
			{
				"buffer_size": 471,
				"line_ending": "Unix"
			}
		},
		{
			"file": "examples/cluster-1/control1-1.js",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "examples/cluster-1/app1-2.js",
			"settings":
			{
				"buffer_size": 471,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/tmp/subl stdin cl1YGZ.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/tmp/subl stdin RWBTTf.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/tmp/subl stdin 20b2u3.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/tmp/subl stdin Qxz51G.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/beans/hooks.core/index.js",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/tmp/subl stdin UfNB6Q.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/tmp/subl stdin cqft4i.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/server/index.js",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/tmp/subl stdin vMNVS9.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/tmp/subl stdin UQhWEg.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "bin/server.js",
			"settings":
			{
				"buffer_size": 228,
				"line_ending": "Unix"
			}
		},
		{
			"file": "bin/server",
			"settings":
			{
				"buffer_size": 48,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/beans/hooks.rabbitmq/transport.js",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/tmp/subl stdin BHpauD.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/beans/hooks.jsonp/transport.js",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/tmp/subl stdin axJpuE.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/tmp/subl stdin Cu0Gz7.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/tmp/subl stdin c3H8gx.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/tmp/subl stdin 9lr9hN.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/beans/hooks.jsonp/index.js",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "examples/test1/hook1.js",
			"settings":
			{
				"buffer_size": 800,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/beans/hooks.transport.jsonp/index.js",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/beans/hooks.transport.rabbitmq/index.js",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/tmp/subl stdin oBovSB.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/beans/hooks.transport.rabbitmq/transport.js",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/tmp/subl stdin TkEVrb.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/beans/hooks.core/utils.js",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "examples/test1/hook2.js",
			"settings":
			{
				"buffer_size": 551,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/beans/hooks.transport.rabbitmq/utils.js",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "node_modules/amqp/amqp.js",
			"settings":
			{
				"buffer_size": 52002,
				"line_ending": "Unix"
			}
		},
		{
			"file": "examples/cluster-1/http-proxy.js",
			"settings":
			{
				"buffer_size": 488,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/tmp/subl stdin lsqMLp.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/beans/hooks.transport.rabbitmq/bucket.js",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/beans/hooks.transport.jsonp/transport.js",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "examples/cluster-1/mem.js",
			"settings":
			{
				"buffer_size": 286,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/tmp/subl stdin lLvWjC.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "var utils = require('./utils'),\nTransports = require('./transports'),\nvine = require('vine'),\nlogger = require('winston').loggers.get('daisy'),\nsprintf = require('sprintf').sprintf;\n\n	\nexports.plugin = function(router, params) {\n\n\n\n\n	//target hooks\n	var target = params.target || params.transport || {},\n	remoteName = params.name,\n	transports = new Transports(router, params.scope, remoteName),\n	transportTypes = {};\n\n\n	if(!remoteName) throw new Error('A name must be provided for your app');\n\n\n	\n	var haba = this;\n\n\n	var self = {\n\n		/**\n		 */\n\n		init: function() {\n				\n			\n			haba.plugins('hooks.transport.*').forEach(function(plugin) {\n\n\n				self.addHookTransport(plugin.transport);\n\n			});\n		},\n\n		/**\n		 */\n\n		addListener: function(listener) {\n			\n			if(!listener.route.tags.hook) return;\n\n\n			transports.publishHooks([{\n				path: listener.route.path.value,\n				type: listener.route.type\n			}]);\n				\n		},\n\n		/**\n		 */\n\n		addHookData: function(stickyData) {\n\n			logger.verbose('adding sticky data to daisy');\n			\n			transports.addStickyData(stickyData);\n\n		},\n\n		/**\n		 */\n\n		connectHook: function(config) {\n\n			logger.verbose(sprintf('connecting hook %s', config.type));\n\n			\n			transports.add(transportTypes[config.type].connect(config));\n\n		},\n\n		/**\n		 */\n\n		addHookTransport: function(transport) {\n\n			logger.verbose(sprintf('adding available hook transport %s', transport.name));\n\n			transportTypes[transport.name] = transport;\n		}\n	};\n\n	router.on({\n\n		/**\n		 * connect before starting up this app\n		 */\n\n		'pull load/*': function(req, res, mw) {\n			logger.verbose('loading daisy');\n\n\n			for(var name in target) {\n				\n				var transport = transportTypes[name];\n\n\n				if(!transport) continue;\n\n				//can be multiple hooks to a particular transport.\n				var transportConfigs = target[transport.name];\n				\n				if(!(transportConfigs instanceof Array)) transportConfigs = [transportConfigs];\n				\n				var running = transportConfigs.length;\n\n				if(!running) return mw.next();\n				\n				transportConfigs.forEach(function(cfg)\n				{\n					\n					//set the queue name\n					cfg.name = remoteName;\n					\n					transports.add(transport.connect(cfg)).once('connect', function() {\n						if(!(--running)) {\n							logger.verbose('loaded daisy');\n							mw.next();\n						}\n					})\n				})\n			}\n		},\n\n\n		/**\n		 */\n\n		'push -private new/listener': self.addListener,\n\n		/**\n		 */\n		\n		'pull -hook -ttl=3600 -method=GET hooks': function(req, res) {\n\n			//TODO - get perm level of given session\n			return vine.result(utils.siftPaths(router)).end(res);\n		},\n		\n		/**\n		 * data that's passed to hooks on every request, such as access tokens\n		 */\n		\n		'push hooks/sticky/data OR hooks/data': self.addHookData,\n		\n		/**\n		 */\n		\n		'push -private hooks/connect': self.connectHook\n\n\n		/**\n		 * end any piped data - it isn't supported yet\n		 */\n\n		/*'push OR pull OR collect -hooked /**': function(req, res, mw) {\n\n			this.message.writer.end();\n\n			this.next();\n		}*/\n	});\n\n	return self;\n}",
			"file": "src/common/index.js",
			"file_size": 2970,
			"file_write_time": 1332388965000000,
			"settings":
			{
				"buffer_size": 2970,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/common/index.js",
			"settings":
			{
				"buffer_size": 191,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/tmp/subl stdin onq5NC.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/common/plugins/hooks.core/index.js",
			"settings":
			{
				"buffer_size": 2970,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/tmp/subl stdin xTnlkv.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/tmp/subl stdin O1H5yi.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/tmp/subl stdin xaoya6.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/tmp/subl stdin U6Tlxz.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/tmp/subl stdin CYuVy4.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/tmp/subl stdin fs1vfW.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "var Structr = require('structr'),\nutils = require('./utils'),\nTransactions = require('./transactions'),\nvine = require('vine'),\n_ = require('underscore'),\nbeanpoll = require('beanpoll'),\ncrema = require('crema'),\nlogger = require('winston').loggers.get('daisy'),\nsprintf = require('sprintf').sprintf,\nEventEmitter = require('events').EventEmitter;\n\nvar Response = {\n	next: 'next',\n	response: 'response'\n}\n\nvar Request = {\n	body: 'body'\n}\n\n\nfunction cleanPath(path) {\n\n	return path.replace(/^\\/+|\\/+$/,'');\n\n}\n\n \nvar TransportWrapper = Structr({\n	\n	/**\n	 */\n	\n	'__construct': function(collection, transport, name) {\n\n		this._em = new EventEmitter();\n		this._em.setMaxListeners(0);\n\n		this.name = name;\n\n		//the collection that holds all the transports\n		this._collection = collection;\n\n		//the scope of queues to bind to\n		this.scope = collection.scope || [];\n\n		\n		//the router that handles all the path requests\n		this._router = collection._router;\n		\n		//the transport which broadcasts routes over the network\n		this._transport = transport;\n		\n		//paths we've already hooked into\n		this._hooked = {};\n\n		this._remoteRouters = {};\n\n		\n		//any paths which should be ignored. This is a dirty method of making sure requests\n		//don't get re-broadcasted out to the same transport\n		this._ignore = {};\n		\n		//controls transactions between two servers\n		this._transactions = new Transactions(transport);\n\n\n		//kill transactions after N seconds\n		this._killTimeout = 1000 * 20;\n		\n		//called back when the app first starts up, and when new apps are introduced\n		transport.onHandshake = this.getMethod('onHandshake');\n		\n		//called when an app on the network is sending a request that *this* app can handle\n		transport.onMessage = this.getMethod('onMessage');\n		\n		//what happens when a call is made to a path that doens't exist\n		transport.onNoRoute = this.getMethod('onNoRoute');\n\n		//\n		transport.onConnected = this.getMethod('onConnected');\n\n		transport.onDisconnected = this.getMethod('onDisconnected');\n\n		var self = this;\n\n		this._router.on('push -hook announce/:appName', function() {\n\n			this.from.request(name + '/ready').header('queue', null).push(undefined);\n		});\n\n		this._router.on('pull ' + name + '/ready', function(req, res) {\n			res.end();\n		});\n\n	},\n\n	/**\n	 */\n\n	'on': function(type, callback) {\n		this._em.on(type, callback);\n	},\n\n	/**\n	 */\n\n	'once': function(type, callback) {\n		this._em.once(type, callback);\n	},\n	\n	/**\n	 * publishes *public* hooks to the network. Any app can call these.\n	 */\n	\n	'publishHooks': function(hooks) {\n\n		var self = this;\n		\n		hooks.forEach(function(hook) {\n\n\n			self._hooked[cleanPath(utils.generalizeParams(hook.path))]  = 1;\n\n			logger.verbose(sprintf('publish hook %s', hook.path));\n		});\n		\n		this._transport.publishHooks(hooks);\n	},\n	\n	/**\n	 * When new apps come in, register their hooks\n	 */\n	\n	'onHandshake': function(handshake) {                           \n		var self = this;\n\n\n\n\n		if(handshake.hooks instanceof Array) {\n\n			handshake.hooks.forEach(function(hook) {\n				self._hook(hook);\n			});\n\n		} else {\n\n			for(var route in handshake.hooks) {\n\n				var info = handshake.hooks[route];\n\n				self._hook(route, info.t, info.a);	\n					\n			}\n\n		}\n	},\n\n	/**\n	 */\n	'onDisconnected': function() {\n	},\n\n	/**\n	 */\n\n	'onConnected': function() {\n		//TODO - push reconnect\n		if(this._announced) return;\n		this._announced = true;\n\n\n		this._router.request('announce/' + this.name).header('queue', null).push(undefined);\n		this._em.emit('connect');\n	},\n	\n	/**\n	 * handle any message from a server\n	 */\n	\n	'onMessage': function(data, headers, from) {\n\n		if(headers.type in Response) {\n\n			this._onResponse(data, headers, from);\n\n		} else {\n\n			this._ignore[headers.path] = 1;\n			this._onRequest(data, headers, from);\n			delete this._ignore[headers.path];\n\n		}\n	},\n	\n	/**\n	 */\n	\n	'onNoRoute': function(path) {      \n	                             \n\n		(this._transactions.live(path) || []).forEach(function(transaction) {\n\n			transaction.emit('response', { error: 'Route ' + path + ' does not exist' });\n\n		});\n	},\n	\n	/**\n	 */\n	\n	'_onRequest': function(payload, headers, from)\n	{           \n		var self = this,\n		fromRouter = this._from(from),\n		responded = false,\n		respond = function(response, type) {\n\n			//this WILL happen on items such as push routes\n			if(responded) return;\n			responded = true;\n\n			self._transport.direct(from.replyTo, response, { transactionId: headers.transactionId, type: type } );\n		};\n\n\n		logger.verbose(sprintf('hooked %s %s', headers.type.toUpperCase(), headers.path));\n\n\n		var req = this._router.request(headers.path).\n\n		//type of route: push, pull, collect, etc.\n		type(headers.type).\n\n		//point back to the remote router\n		from(fromRouter).\n\n		headers(payload.headers).\n\n		query(payload.query).\n\n		//only hooked items can be processed\n		tag('hook', true).\n\n		//the ack callback\n		response(function(err, data) {\n\n			//some errors CANNOT be serialized for some reason\n			respond({ error: err ? { message: err.message, stack: err.stack } : null, data: data ? data : null }, Response.response);\n\n		});\n\n\n		//this happens with services such as rabbitmq where you might\n		//have a CLUSTER of applications which use the same queues\n		if(from.isSelf) {\n\n			respond({ error: new Error('cannot handle self') }, Response.response);\n			return;\n		}\n\n		if(!req.hasListeners()) {\n			\n			logger.verbose(sprintf('path %s does not exist', headers.path));\n\n			respond({ error: new Error('route does not exist') }, Response.response);\n			return;\n		}\n\n\n		if(headers.hasNext) {\n\n			req.next(function() {\n\n				respond(null, Request.next);\n\n			})\n		}\n\n		req.dispatch().end(payload.data);\n\n		\n	},        \n	\n	\n	/**\n	 */\n	\n	'_from': function(from) {\n	                   	\n		var queue = from.name,\n		replyTo = from.replyTo;\n		              \n		var transactions = this._transactions, self = this;\n\n		if(this._remoteRouters[replyTo]) return this._remoteRouters[replyTo];\n\n\n\n		var router = /*this._remoteRouters[replyTo] =*/ beanpoll.router();\n		router.use(this._router.using());\n		router.name = replyTo;\n\n\n\n		Object.keys(this._hooked).forEach(function(path) {\n\n			Object.keys(router.directors).forEach(function(type) {\n\n				router.on(path, { type: type }, function(req, res, mw) {\n							\n					var mw = this,\n					msg = mw.request;\n\n					self._dispatch(mw, type, crema.stringifySegments(mw.current.path.segments, mw.current.params), replyTo);\n				});\n\n			})\n		});\n\n		return router;\n	},\n\n\n	\n	/**\n	 */\n	\n	'_onResponse': function(data, headers, from) {\n\n		var trans = this._transaction(headers);\n\n		if(!trans) return;\n		\n		trans.emit(headers.type, data);      \n	},\n\n	\n	/**\n	 */\n	 \n	'_transaction': function(headers) {\n\n		var trans = this._transactions.live(headers.transactionId);\n\n\n		//this WILL happen when fanouts are acknowledged, such as push.\n		if(!trans) return null;//console.error('Transaction %s does not exist', headers.transactionId);\n\n		return trans;\n		\n	},\n\n	/**\n	 */\n\n	'_getQueue': function(path) {\n\n		if(!this.scope.length) return null;\n\n		var queues = this._hooked[path] || [];\n\n\n		return _.intersection(queues, this.scope);\n	},\n	\n	/**\n	 * hooks a *remote* route to the app\n	 */\n	\n	'_hook': function(route, types, queues) {\n\n		var path;\n\n		if(typeof route == 'object') {\n			types = [route.type];\n			path = route.path;\n		} else {\n			path = route;\n		}\n\n		if(!types) types = [];\n		if(!queues) queues = [];\n\n\n		path = cleanPath(path);\n\n		\n		//router\n		var r        = this._router,\n\n		//routes to ignore - incomming remote calls are ignored\n		ignore       = this._ignore,\n\n		//transport to use - JSONP? AMQP?\n		transport    = this._transport,\n\n		//transactions ~ push/pull \n		transactions = this._transactions,\n\n		self = this;\n\n		this._hooked[path] = queues || [];\n		\n		try {\n\n			var pathExpr = crema.parsePath(path);\n\n\n			types.forEach(function(type) {\n\n				var director = r.director(type),\n				req = r.request(path).type(type),\n				hasListener = req.exists(),\n				hasPrivate = req.tag('private', true).exists();\n\n\n				if(hasPrivate || (hasListener && !director.passive)) return;\n\n				// if(hasPrivate || (r.routeExists({ path: channelExpr }) && (!hasListener || director.passive))) return;\n\n\n				logger.verbose(sprintf('hooking %s %s', type, path));\n				\n				r.on(path, { tags: { hooked: '*', unfilterable: '*', stream: true, priority: -999999 }, type: type }, function(req, res) {\n\n					var mw = this, \n					msg = mw.request,\n					params = msg.params;\n\n					path = crema.stringifySegments(mw.current.path.segments, mw.current.params);\n\n					if(msg.from != self._router || msg.headers.ignoreHook) {\n						throw new Error('cannot proxy \"' + path + '\" request');\n					}\n\n					self._dispatch(mw, type, path, msg.headers.queue !== undefined ? msg.headers.queue : self._getQueue(path));\n				});\n\n			});\n\n		} catch(e) {\n			logger.error(e, { stack: e.stack });\n		}\n\n\n		\n\n	},\n\n\n	'_dispatch': function(mw, type, path, queue) {\n		\n		var msg = mw.request, self = this;\n\n\n		logger.verbose(sprintf('remote %s %s', type.toUpperCase(), path))\n\n\n		function respond(err, result) {\n\n			if(mw.response.sentHeaders) return;\n\n			if(err) logger.error(err, { stack: err.stack });\n\n			if(err) return mw.response.error(new Error(err.message));\n\n			mw.response.end(result);\n\n		}\n\n		function onData(err, result) {\n\n			if(err) return respond(err);\n\n\n			var transaction = self._transactions.\n			create(path).\n			prepare(type, {\n				queue: queue,\n				tags: msg.filter, //check this tomorrow Friday, February 03, 2012\n				payload: {\n					data: result || true,\n					query: _.defaults(msg.query || {}, self._collection._stickyData || {}),\n					headers: msg.headers\n				},\n				hasNext: mw.hasNext,\n				next: function() {\n					mw.next()\n				}\n			}).\n			register({ timeout: self._killTimeout });\n\n\n			transaction.onEnd('response', function(response) {\n\n				respond(response.error, response.data);\n\n			});		\n\n			var success = transaction.send();\n\n\n			//probably out of scope\n			if(!success) {\n				transaction.dispose();\n				respond(new Error('Could not send '+path+'. Most likely a target was not set.'));\n			}\n		}\n\n		//dump incomming data - we CANNOT pipe it over the network\n		//since some transports don't support it, such as rabbitmq. With rabbit,\n		//piping data will be round-robbined around queues. \n		//msg.dump(onData);\n\n		onData();\n	}\n});\n\n\nmodule.exports = Structr({\n	\n	/**\n	 */\n	\n	'__construct': function(router, scope, remoteName) {\n\n		this.remoteName = remoteName;\n		this._router = router;\n		this._transports = [];\n		this._stickyData = {}\n		this.scope = scope;\n\n	},\n	\n	/**\n	 */\n	\n	'addStickyData': function(data) {\n\n		Structr.copy(data || {}, this._stickyData, true);\n\n	},\n	\n	/**\n	 */\n	\n	'publishHooks': function(hooks) {\n\n		this._transports.forEach(function(transport) {\n\n			transport.publishHooks(hooks);\n\n		});\n	},\n	\n	/**\n	 */\n	\n	'add': function(transport) {\n\n		var wrapper = new TransportWrapper(this, transport, this.remoteName);\n		\n		this._transports.push(wrapper);\n\n		wrapper.publishHooks(utils.siftPaths(this._router));\n\n		return wrapper;\n	}\n});",
			"file": "src/common/plugins/hooks.core/transports.js",
			"file_size": 10979,
			"file_write_time": 1330409926000000,
			"settings":
			{
				"buffer_size": 10979,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/tmp/subl stdin QRT9He.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/tmp/subl stdin DHZOaG.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/tmp/subl stdin GORAO3.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/tmp/subl stdin wU3iJn.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/tmp/subl stdin miQc2O.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/tmp/subl stdin 7TstHG.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/node/server/index.js",
			"settings":
			{
				"buffer_size": 2289,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/node/plugins/hooks.core/transports.js",
			"settings":
			{
				"buffer_size": 10979,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/tmp/subl stdin zrWsk9.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": ".cupboard",
			"settings":
			{
				"buffer_size": 245,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/tmp/subl stdin 3Po7GT.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/node/plugins/hooks.transport.rabbitmq/transport.js",
			"settings":
			{
				"buffer_size": 6107,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "var Structr = require('structr'),\nEventEmitter = require('events').EventEmitter;\n\nmodule.exports = Structr({\n	\n	/**\n	 */\n	\n	'__construct': function() {\n		\n		this._em = new EventEmitter();\n		this.collection = [];\n\n	},\n\n	/**\n	 */\n\n	'on': function(type, callback) {\n		this._em.on(type, callback);\n	},\n	\n	/**\n	 */\n	\n	'add': function(items) {\n		if(!(items instanceof Array)) items = [items];\n		\n		var self = this;\n		\n		items.forEach(function(item) {\n\n			self.collection.push(item);\n\n			// if(self._dump) self._dump(item);\n\n		});\n\n		self._em.emit('hooks', items);\n	},\n	\n	/**\n	 * dumps the queue\n	 */\n	\n	'dump': function(callback) {\n		\n		// this._dump = callback;\n		\n		this.collection.forEach(callback);\n	},\n\n	/**\n	 */\n\n	'hooks': function() {\n		return this.collection;\n	}\n	\n});",
			"file": "lib/node/plugins/hooks.transport.rabbitmq/bucket.js",
			"file_size": 801,
			"file_write_time": 1333041952000000,
			"settings":
			{
				"buffer_size": 770,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/node/plugins/hooks.transport.rabbitmq/transport.js",
			"settings":
			{
				"buffer_size": 6114,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/tmp/subl stdin 1L4tSX.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/tmp/subl stdin hbAONl.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/node/plugins/hooks.transport.rabbitmq/bucket.js",
			"settings":
			{
				"buffer_size": 801,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/tmp/subl stdin T1kjVu.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/common/plugins/hooks.core/transactions.js",
			"settings":
			{
				"buffer_size": 4603,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/tmp/subl stdin qutJ9c.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "lib/node/index.js",
			"settings":
			{
				"buffer_size": 191,
				"line_ending": "Unix"
			}
		},
		{
			"file": "makefile",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/tmp/subl stdin 0xoezW.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/common/plugins/hooks.core/utils.js",
			"settings":
			{
				"buffer_size": 542,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/tmp/subl stdin hpQ98V.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/tmp/subl stdin ICDcxd.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/tmp/subl stdin tgVUrp.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/node/plugins/hooks.transport.rabbitmq/utils.js",
			"settings":
			{
				"buffer_size": 1117,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/node/server/index.js",
			"settings":
			{
				"buffer_size": 2289,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/web/plugins/hooks.transport.jsonp/transport.js",
			"settings":
			{
				"buffer_size": 2101,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/tmp/subl stdin kFRYz7.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/tmp/subl stdin 9bp4ns.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "supervisord.conf",
			"settings":
			{
				"buffer_size": 70,
				"line_ending": "Unix"
			}
		},
		{
			"file": "package.json",
			"settings":
			{
				"buffer_size": 838,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/tmp/subl stdin QcIQR9.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/tmp/subl stdin TGoOat.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/tmp/subl stdin 8wRPek.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/tmp/subl stdin EjdQhM.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/tmp/subl stdin pslA8P.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/tmp/subl stdin 5J08Zd.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/tmp/subl stdin ZwmL3a.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/tmp/subl stdin 2ebJ4c.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 136.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/craig/Dropbox/Developer/Public/daisy/package.json",
		"/Users/craig/Dropbox/Developer/Public/daisy/lib/beans/hooks.transport.jsonp/transport.js",
		"/tmp/subl stdin fIt3ti.txt",
		"/tmp/subl stdin h6WKQX.txt",
		"/Volumes/minimac/Users/craig/Dropbox/Developer/Public/daisy/supervisord.conf",
		"/tmp/subl stdin mMAQM6.txt",
		"/tmp/subl stdin 292YvE.txt"
	],
	"find":
	{
		"height": 33.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"ran",
			"stickyD",
			"sticky",
			"announce",
			"getQ",
			".queue",
			"getQ",
			"scope",
			"_from",
			"getQ",
			"scope",
			"_onRequest",
			"onMessage",
			"\n					console.log(href)",
			"cleanPath",
			"replace",
			"console.l",
			"path.path",
			".error",
			"console.err",
			".message",
			"channel",
			"segments",
			"path",
			"channel",
			"channe",
			"siftC",
			"router",
			".path",
			"params.remote",
			"params.remove",
			"onConnect",
			"onConnected",
			"connect",
			"EventEm",
			"hooked",
			"publish",
			"_hooksBucket",
			"onHandsh",
			"publish ",
			"hooked ",
			"remote ",
			"onConnected",
			"connect",
			"connect'",
			"transport",
			"init",
			"connectHook",
			"haba",
			"e.stack",
			"_requests",
			"onReq",
			"_hook",
			"fromRouter",
			"from(",
			"_dispatch",
			"_from",
			"._disp",
			"_liveByChannel",
			"_addTransaction",
			"_from",
			"remote ",
			"logger.de",
			"remove",
			"_dispat",
			"_req",
			"director",
			"tags",
			"_dispatch",
			"_stickyData",
			"addStickyData",
			"onMessa",
			"headers",
			"stickyDa",
			"onHandshak",
			"announce",
			"_hook",
			"console.error(",
			"publish hook",
			"publish",
			"transport",
			"_dispatch",
			"r.on(",
			"appName",
			"console.l",
			"queues",
			"_hook",
			"utils",
			"onHandsha",
			"newHook",
			"config",
			"generalizeParams",
			"hooksBucket",
			"publishHook",
			"publishHooks",
			"r.on",
			"console.l",
			"onRequest",
			"onEnd",
			"send",
			".send",
			".debug",
			"_dispatch",
			"_from'",
			"_request(",
			"_request",
			"_dispatch",
			"stringify",
			"verbose",
			"_hook",
			":param",
			"console.l",
			"cleanChannel",
			":param",
			"hooked",
			"console",
			"console.l",
			"request",
			"debug(",
			"hooked ",
			"onResponse",
			"hooked",
			"hooking",
			"Adding ",
			"Transaction",
			"onRequest",
			"_hook",
			"Handshake"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"throw new Error"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 70,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "lib/index.js",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/tmp/subl stdin q0XVkK.txt",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/tmp/subl stdin aZDu7s.txt",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "lib/beans/hooks.core/transactions.js",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2807.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "lib/beans/hooks.core/transports.js",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/tmp/subl stdin Vmopb4.txt",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/tmp/subl stdin 9esqoU.txt",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "/tmp/subl stdin Q3lbbv.txt",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "/tmp/subl stdin n5mDvh.txt",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "/tmp/subl stdin QSsYfI.txt",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 10,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"default_dir": "/Users/craig/Dropbox/Developer/Public/daisy/examples/cluster-1",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "examples/cluster-1/app1-1.js",
					"settings":
					{
						"buffer_size": 471,
						"regions":
						{
						},
						"selection":
						[
							[
								326,
								293
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "examples/cluster-1/app2-1.js",
					"settings":
					{
						"buffer_size": 885,
						"regions":
						{
						},
						"selection":
						[
							[
								294,
								237
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 131.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "examples/cluster-1/app2-2.js",
					"settings":
					{
						"buffer_size": 471,
						"regions":
						{
						},
						"selection":
						[
							[
								326,
								294
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "examples/cluster-1/control1-1.js",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "examples/cluster-1/app1-2.js",
					"settings":
					{
						"buffer_size": 471,
						"regions":
						{
						},
						"selection":
						[
							[
								310,
								310
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "/tmp/subl stdin cl1YGZ.txt",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "/tmp/subl stdin RWBTTf.txt",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "/tmp/subl stdin 20b2u3.txt",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "/tmp/subl stdin Qxz51G.txt",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "lib/beans/hooks.core/index.js",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 556.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "/tmp/subl stdin UfNB6Q.txt",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "/tmp/subl stdin cqft4i.txt",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "lib/server/index.js",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "/tmp/subl stdin vMNVS9.txt",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "/tmp/subl stdin UQhWEg.txt",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "bin/server.js",
					"settings":
					{
						"buffer_size": 228,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 27,
					"file": "bin/server",
					"settings":
					{
						"buffer_size": 48,
						"regions":
						{
						},
						"selection":
						[
							[
								44,
								44
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 28,
					"file": "lib/beans/hooks.rabbitmq/transport.js",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 29,
					"file": "/tmp/subl stdin BHpauD.txt",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 30,
					"file": "lib/beans/hooks.jsonp/transport.js",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 345.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 31,
					"file": "/tmp/subl stdin axJpuE.txt",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 32,
					"file": "/tmp/subl stdin Cu0Gz7.txt",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 33,
					"file": "/tmp/subl stdin c3H8gx.txt",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 34,
					"file": "/tmp/subl stdin 9lr9hN.txt",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 35,
					"file": "lib/beans/hooks.jsonp/index.js",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 36,
					"file": "examples/test1/hook1.js",
					"settings":
					{
						"buffer_size": 800,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								800
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 37,
					"file": "lib/beans/hooks.transport.jsonp/index.js",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 38,
					"file": "lib/beans/hooks.transport.rabbitmq/index.js",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 39,
					"file": "/tmp/subl stdin oBovSB.txt",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 40,
					"file": "lib/beans/hooks.transport.rabbitmq/transport.js",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2580.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 41,
					"file": "/tmp/subl stdin TkEVrb.txt",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 42,
					"file": "lib/beans/hooks.core/utils.js",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 43,
					"file": "examples/test1/hook2.js",
					"settings":
					{
						"buffer_size": 551,
						"regions":
						{
						},
						"selection":
						[
							[
								222,
								222
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 44,
					"file": "lib/beans/hooks.transport.rabbitmq/utils.js",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 45,
					"file": "node_modules/amqp/amqp.js",
					"settings":
					{
						"buffer_size": 52002,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 9275.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 46,
					"file": "examples/cluster-1/http-proxy.js",
					"settings":
					{
						"buffer_size": 488,
						"regions":
						{
						},
						"selection":
						[
							[
								245,
								245
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 47,
					"file": "/tmp/subl stdin lsqMLp.txt",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 48,
					"file": "lib/beans/hooks.transport.rabbitmq/bucket.js",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 49,
					"file": "lib/beans/hooks.transport.jsonp/transport.js",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 50,
					"file": "examples/cluster-1/mem.js",
					"settings":
					{
						"buffer_size": 286,
						"regions":
						{
						},
						"selection":
						[
							[
								268,
								268
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 51,
					"file": "/tmp/subl stdin lLvWjC.txt",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 52,
					"file": "src/common/index.js",
					"settings":
					{
						"buffer_size": 2970,
						"regions":
						{
						},
						"selection":
						[
							[
								230,
								230
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 53,
					"file": "src/common/index.js",
					"settings":
					{
						"buffer_size": 191,
						"regions":
						{
						},
						"selection":
						[
							[
								191,
								191
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 54,
					"file": "/tmp/subl stdin onq5NC.txt",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 55,
					"file": "src/common/plugins/hooks.core/index.js",
					"settings":
					{
						"buffer_size": 2970,
						"regions":
						{
						},
						"selection":
						[
							[
								2396,
								2396
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1245.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 56,
					"file": "/tmp/subl stdin xTnlkv.txt",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 57,
					"file": "/tmp/subl stdin O1H5yi.txt",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 58,
					"file": "/tmp/subl stdin xaoya6.txt",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 59,
					"file": "/tmp/subl stdin U6Tlxz.txt",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 60,
					"file": "/tmp/subl stdin CYuVy4.txt",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 61,
					"file": "/tmp/subl stdin fs1vfW.txt",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 62,
					"file": "src/common/plugins/hooks.core/transports.js",
					"settings":
					{
						"buffer_size": 10979,
						"regions":
						{
						},
						"selection":
						[
							[
								9269,
								9269
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 63,
					"file": "/tmp/subl stdin QRT9He.txt",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 64,
					"file": "/tmp/subl stdin DHZOaG.txt",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 65,
					"file": "/tmp/subl stdin GORAO3.txt",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 66,
					"file": "/tmp/subl stdin wU3iJn.txt",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 67,
					"file": "/tmp/subl stdin miQc2O.txt",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 68,
					"file": "/tmp/subl stdin 7TstHG.txt",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 69,
					"file": "lib/node/server/index.js",
					"settings":
					{
						"buffer_size": 2289,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 524.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 70,
					"file": "lib/node/plugins/hooks.core/transports.js",
					"settings":
					{
						"buffer_size": 10979,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 71,
					"file": "/tmp/subl stdin zrWsk9.txt",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 72,
					"file": ".cupboard",
					"settings":
					{
						"buffer_size": 245,
						"regions":
						{
						},
						"selection":
						[
							[
								36,
								36
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 73,
					"file": "/tmp/subl stdin 3Po7GT.txt",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 74,
					"file": "lib/node/plugins/hooks.transport.rabbitmq/transport.js",
					"settings":
					{
						"buffer_size": 6107,
						"regions":
						{
						},
						"selection":
						[
							[
								4935,
								4939
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 2.0,
						"translation.y": 2923.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 75,
					"file": "lib/node/plugins/hooks.transport.rabbitmq/bucket.js",
					"settings":
					{
						"buffer_size": 770,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								770
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 76,
					"file": "src/node/plugins/hooks.transport.rabbitmq/transport.js",
					"settings":
					{
						"buffer_size": 6114,
						"regions":
						{
						},
						"selection":
						[
							[
								171,
								173
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 77,
					"file": "/tmp/subl stdin 1L4tSX.txt",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 78,
					"file": "/tmp/subl stdin hbAONl.txt",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 79,
					"file": "src/node/plugins/hooks.transport.rabbitmq/bucket.js",
					"settings":
					{
						"buffer_size": 801,
						"regions":
						{
						},
						"selection":
						[
							[
								293,
								293
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 80,
					"file": "/tmp/subl stdin T1kjVu.txt",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 81,
					"file": "src/common/plugins/hooks.core/transactions.js",
					"settings":
					{
						"buffer_size": 4603,
						"regions":
						{
						},
						"selection":
						[
							[
								362,
								362
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 82,
					"file": "/tmp/subl stdin qutJ9c.txt",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 83,
					"file": "lib/node/index.js",
					"settings":
					{
						"buffer_size": 191,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 84,
					"file": "makefile",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Makefile/Makefile.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 85,
					"file": "/tmp/subl stdin 0xoezW.txt",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 86,
					"file": "src/common/plugins/hooks.core/utils.js",
					"settings":
					{
						"buffer_size": 542,
						"regions":
						{
						},
						"selection":
						[
							[
								113,
								113
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 87,
					"file": "/tmp/subl stdin hpQ98V.txt",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 88,
					"file": "/tmp/subl stdin ICDcxd.txt",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 89,
					"file": "/tmp/subl stdin tgVUrp.txt",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 90,
					"file": "src/node/plugins/hooks.transport.rabbitmq/utils.js",
					"settings":
					{
						"buffer_size": 1117,
						"regions":
						{
						},
						"selection":
						[
							[
								569,
								569
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 91,
					"file": "src/node/server/index.js",
					"settings":
					{
						"buffer_size": 2289,
						"regions":
						{
						},
						"selection":
						[
							[
								1230,
								1231
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 360.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 92,
					"file": "src/web/plugins/hooks.transport.jsonp/transport.js",
					"settings":
					{
						"buffer_size": 2101,
						"regions":
						{
						},
						"selection":
						[
							[
								1235,
								1235
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 735.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 93,
					"file": "/tmp/subl stdin kFRYz7.txt",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 94,
					"file": "/tmp/subl stdin 9bp4ns.txt",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 95,
					"file": "supervisord.conf",
					"settings":
					{
						"buffer_size": 70,
						"regions":
						{
						},
						"selection":
						[
							[
								68,
								55
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 96,
					"file": "package.json",
					"settings":
					{
						"buffer_size": 838,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 97,
					"file": "/tmp/subl stdin QcIQR9.txt",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 98,
					"file": "/tmp/subl stdin TGoOat.txt",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 99,
					"file": "/tmp/subl stdin 8wRPek.txt",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 100,
					"file": "/tmp/subl stdin EjdQhM.txt",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 101,
					"file": "/tmp/subl stdin pslA8P.txt",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 102,
					"file": "/tmp/subl stdin 5J08Zd.txt",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 103,
					"file": "/tmp/subl stdin ZwmL3a.txt",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 104,
					"file": "/tmp/subl stdin 2ebJ4c.txt",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 218.0,
	"status_bar_visible": true
}
